openapi: 3.0.1
info:
  title: Assessment Service API(s)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  description: >-
    - The Sunrdb Service is intermediate service to access the sunbird service api's. Apis perform operations related to user management, organisation management and learning resources etc 
    
    - The URL for sunbird service API(s) is `sunbird/api`

    - <b>Note:</b> These resources can be used in other services 
  contact: {}
  version: '1.0'
servers:
- url: https://staging.open-sunbird.org/sunbird/api
  variables: {}
paths: 
   /v2/observations/assessment/{observationId}:
    get:
      tags:
      - Observations Details
      summary: To get observations details
      description: This api is used for to get observations details
           - The endpoint for **Observations assessment V2** is `/observations/assessment/`  
      operationId: To Activate User
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: query
          name: entityId
          required: true
          description: Entity Id
          schema:
            type: string 
        - in: query
          name: submissionNumber
          required: true
          description: Submission Number
          schema: 
            type: string
        - in: path
          name: observationId
          required: true
          description: Observation Id
          schema:
            type: string            
      responses:
        200:
          description: "Observation assessment information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsAssessmentResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observations400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v2/observations/create:
    post:
      tags:
      - Create Observations
      summary: To Create Observations
      description: This api is used for to create observation
           - The endpoint for **Observations Create V2** is `/observations/create/`  
      operationId: To create observation
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
      requestBody:
        description: >-
            - The body payload comprises of the access token
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/observationCreateRequest"
              
      responses:
        200:
          description: "Observation create information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationCreateResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observations400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observations/delete/{observationId}:
    get:
      tags:
      - Delete an observation
      summary: To delete an observation
      description: This api is used for to delete an observation
           - The endpoint for **Observation Delete V1** is `/observations/delete/`  
      operationId: To delete observation
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationId
          required: true
          description: Observation Id
          schema:
            type: string            
      responses:
        200:
          description: "observation delete details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsDeleteResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationDelete400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observations/addEntityToObservation/{observationId}:
    post:
      tags:
      - Map entities to observations
      summary: To map entities to observations
      description: This api is used to map entities to observations 
           - The endpoint for **Observations add Entity To Observation V1** is `/observations/addEntityToObservation/`  
      operationId: To map entities to observations
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationId
          required: true
          description: Observation Id
          schema:
            type: string 
      requestBody:
        description: >-
            - The body payload comprises of the data it contains array of entities 
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MapEntitiesToObservationRequest"
              
      responses:
        200:
          description: "Map entities observation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapEntitiesToObservationResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapEntitiesToObservation400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observations/removeEntityFromObservation/{observationId}:
    post:
      tags:
      - Un Map entities to observations
      summary: To un map entities from observations
      description: This api is used to map entities to observations 
           - The endpoint for **Observations Un Map Entity To Observation V1** is `/observations/removeEntityFromObservation/`  
      operationId: To un map entities to observations
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationId
          required: true
          description: Observation Id
          schema:
            type: string 
      requestBody:
        description: >-
            - The body payload comprises of the data it contains array of entities 
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UnMapEntitiesToObservationRequest"
              
      responses:
        200:
          description: "Un map entities observation response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnMapEntitiesToObservationResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnMapEntitiesToObservation400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observationSubmissions/create/{observationId}:
    get:
      tags:
      - Create A New Observation Submission
      summary: To create a new observation Submission
      description: This api is used to create new submmision for the observation
           - The endpoint for **Create Observation Submission V1** is `/observationSubmissions/create/`  
      operationId: To create observation submission
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationId
          required: true
          description: Observation Id
          schema:
            type: string 
        - in: query
          name: entityId
          required: true
          description: entity Id
          schema:
            type: string 
      responses:
        200:
          description: "Un map entities observation response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationSubmissionsCreateResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationSubmissions400Error'
        
      deprecated: false
      security:
        - bearer: []      
   /v1/observationSubmissions/make/{submissionId}:   
    post:
      tags:
      - To Create Observation Submission
      summary: To Create Observation Submission
      description: This api is used to create observation submission
           - The endpoint for **Observations Create Observation V1** is `/observations/make/`  
      operationId: To make observation submission
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: submissionId
          required: true
          description: submission Id
          schema:
            type: string 
      requestBody:
        description: >-
            - The body payload comprises of the data it contains array of entities 
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/observationSubmissionsMakeRequest"
              
      responses:
        200:
          description: "Un map entities observation response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationSubmissionsMakeResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationSubmissionsMake400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observationSubmissions/isAllowed/{observationSubmissionId}:
    get:
      tags:
      - Check Submissions Status
      summary: To Check Submissions Status
      description: This api is used for to get the status of the submission
           - The endpoint for **Observations submission Allowed** is `/observationSubmissions/isAllowed/`  
      operationId: To check submission status
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: query
          name: evidenceId
          required: true
          description: evidence Id
          schema:
            type: string 
        - in: path
          name: observationSubmissionId
          required: true
          description: Observation Submission Id
          schema:
            type: string     
            
      responses:
        200:
          description: "Observation Submission information"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsSubmissionStatusResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsSubmissionStatus400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observationSubmissions/delete/{observationSubmissionId}:
    get:
      tags:
      - Delete an observation submission
      summary: To delete an observation
      description: This api is used for to delete an observation
           - The endpoint for **Observation Submission Delete V1** is `/observationSubmissions/delete/`  
      operationId: To delete observation submission
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationSubmissionId
          required: true
          description: Observation Submission Id
          schema:
            type: string            
      responses:
        200:
          description: "observation submission delete details"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsSubmissionDeleteResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsSubmissionDelete400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observationSubmissions/title/{observationSubmissionId}:
    post:
      tags:
      -  Set Observation Submission Title
      summary: To set observation submission title
      description: This api is used to set observation submission title 
           - The endpoint for **Observation Submission Title Set V1** is `/observationSubmissions/title/`  
      operationId: observation submission title
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationSubmissionId
          required: true
          description: Observation SubmissionId Id
          schema:
            type: string 
      requestBody:
        description: >-
            - The body payload comprises of the title
            - The body parameter refers to the format of the request, the request body (payload) takes the following media types to 
              payload:
                json
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/observationSubmissionTitleRequest"
              
      responses:
        200:
          description: "Un map entities observation response"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationSubmissionTitleResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationSubmissionTitle400Error'
        
      deprecated: false
      security:
        - bearer: []
   /v1/observationSubmissions/list/{observationId}:
    get:
      tags:
      - List Observation Submissions
      summary: To get list of observation submissions
      description: This api is used to list the observasion submission
           - The endpoint for **Observation Submission List V1** is `/observationSubmissions/list/`  
      operationId: observation submissions list
      parameters:
        - name: X-authenticated-user-token
          in: header
          description: Represents the authorized User token to execute the API.
          required: true
          schema:
            type: string
        - in: path
          name: observationId
          required: true
          description: Observation Id
          schema:
            type: string 
        - in: query
          name: entityId
          required: true
          description: entity Id
          schema:
            type: string 
      responses:
        200:
          description: "observation submission list"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsSubmissionListResponse'
           
        500:
          description: "'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'
        400:
          description: 'BAD REQUEST. The operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/observationsSubmissionList400Error'
        
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
   
    observations400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: params
              param: 
                type: string
                example: _id
              msg: 
                type: string
                example: required observation id
          
    500Error:
            type: object
            properties:
              result:
                type: boolean
                example: false
              message:
                type: string
                example: Internal Server Error
              
    observationsAssessmentResponse:
            type: object
            properties:
              evidences: 
                type: array
                items: 
                  type: object
                  properties: 
                    code: 
                      type: string
                      example: BL
                    sections: 
                      type: array
                      items: 
                        type: object
                        properties: 
                          code: 
                            type: string
                            example: SQ
                          questions: 
                            type: array
                            items: 
                              type: object
                              properties: 
                                _id: 
                                  type: string
                                  example: 
                                question: 
                                  type: string
                                  example: 
                                options: 
                                  type: string
                                  example: 
                                children: 
                                  type: string
                                  example: 
                                questionGroup: 
                                  type: string
                                  example: 
                                fileName: 
                                  type: string
                                  example: 
                                instanceQuestions: 
                                  type: string
                                  example: 
                                deleted: 
                                  type: string
                                  example: 
                                tip: 
                                  type: string
                                  example: 
                                externalId: 
                                  type: string
                                  example: 
                                visibleIf: 
                                  type: string
                                  example: 
                                file: 
                                  type: string
                                  example: 
                                responseType: 
                                  type: string
                                  example: pageQuestions
                                validation: 
                                  type: string
                                  example: 
                                page: 
                                  type: string
                                  example: p1
                                showRemarks: 
                                  type: string
                                  example: 
                                isCompleted: 
                                  type: string
                                  example: 
                                remarks: 
                                  type: string
                                  example: 
                                value: 
                                  type: string
                                  example: 
                                canBeNotApplicable: 
                                  type: string
                                  example: 
                                usedForScoring: 
                                  type: string
                                  example: 
                                modeOfCollection: 
                                  type: string
                                  example: 
                                questionType: 
                                  type: string
                                  example: 
                                accessibility: 
                                  type: string
                                  example: 
                                updatedAt: 
                                  type: string
                                  example: 
                                createdAt: 
                                  type: string
                                  example: 
                                __v: 
                                  type: string
                                  example: 
                                evidenceMethod: 
                                  type: string
                                  example: 
                                payload: 
                                  type: string
                                  example: 
                                startTime: 
                                  type: string
                                  example: 
                                endTime: 
                                  type: string
                                  example: 
                                pageQuestions: 
                                  type: array
                                  items: 
                                    type: object
                                    properties: 
                                      _id: 
                                        type: string
                                        example: 5be4e40e9a14ba4b5038dcfb
                                      question: 
                                        type: array
                                        items: 
                                          type: string
                                          example: "Are all empty rooms and terrace areas locked securely?"
                                      options: 
                                        type: array
                                        items: 
                                          type: object
                                          properties: 
                                            value: 
                                              type: string
                                              example: R1
                                            label: 
                                              type: string
                                              example: None
                                      questionGroup: 
                                        type: array
                                        items: 
                                          type: string
                                          example: A1
                                      deleted: 
                                        type: boolean
                                      tip: 
                                        type: string
                                        example: 
                                      externalId: 
                                        type: string
                                        example: LW/SS/22
                                      visibleIf: 
                                        type: string
                                        example: 
                                      file: 
                                        type: string
                                        example: 
                                      responseType: 
                                        type: string
                                        example: radio
                                      validation: 
                                        type: object
                                        properties: 
                                          required: 
                                            type: boolean
                                      page: 
                                        type: string
                                        example: p1
                                      showRemarks: 
                                        type: boolean
                                      isCompleted: 
                                        type: boolean
                                      remarks: 
                                        type: string
                                        example: 
                                      value: 
                                        type: string
                                        example: 
                                      canBeNotApplicable: 
                                        type: string
                                        example: false
                                      usedForScoring: 
                                        type: string
                                        example: 
                                      modeOfCollection: 
                                        type: string
                                        example: onfield
                                      questionType: 
                                        type: string
                                        example: auto
                                      accessibility: 
                                        type: string
                                        example: local
                                      updatedAt: 
                                        type: string
                                        example: 2018-11-09T01:34:06.839Z
                                      createdAt: 
                                        type: string
                                        example: 2018-11-09T01:34:06.839Z
                                      __v: 
                                        type: number
                                        example: 0
                                      evidenceMethod: 
                                        type: string
                                        example: LW
                                      payload: 
                                        type: object
                                        properties: 
                                          criteriaId: 
                                            type: string
                                            example: 5be1616549e0121f01b2180c
                                          responseType: 
                                            type: string
                                            example: radio
                                          evidenceMethod: 
                                            type: string
                                            example: LW
                                          rubricLevel: 
                                            type: string
                                            example: 
                                      startTime: 
                                        type: string
                                        example: 
                                      endTime: 
                                        type: string
                                        example: 
                
                            
    observationCreateRequest:
      type: object
      properties:
        data: 
          type: object
          properties: 
            name: 
              type: string
              example: observation
            description: 
              type: string
              example: school observation
            startDate: 
              type: string
              example: "2018-11-09T01:34:06.839Z"
            endDate: 
              type: string
              example: "2018-11-09T01:34:06.839Z"
            status: 
              type: string
              example: draft
            entities: 
              type: array
              items: 
                type: string
                example: 5beaa888af0065f0e0a10515
                
    observationCreateResponse:
      type: object
      properties:
        message: 
          type: string
          example: Successfully created solution
        status: 
          type: integer
          example: 200
        result: 
          type: object
          properties: 
            _id: 
              type: string
              example: 5edf880baf0d3261e4af7f7e
            externalId: 
              type: string
              example: "AFRICA-ME-TEST-FRAMEWORK-TEMPLATE-1591707659674"
            frameworkExternalId: 
              type: string
              example: AFRICA-ME-TEST-FRAMEWORK
            frameworkId: 
              type: string
              example: 5d15adc5fad01368a494cbd7
            programExternalId: 
              type: string
              example: "My program-1591707659613"
            programId: 
              type: string
              example: 5edf880baf0d3261e4af7f7d
            entityTypeId: 
              type: string
              example: 5d15a959e9185967a6d5e8a6
            entityType: 
              type: string
              example: school
            isAPrivateProgram: 
              type: boolean
            observationName: 
              type: string
              example: My Solution
            observationId: 
              type: string
              example: 5edf880caf0d3261e4af7f7f
                
    observationsDeleteResponse:
      type: object
      properties:
        message: 
          type: string
          example: Observation deleted successfully.
        status: 
          type: integer
          example: 200
          
    observationDelete400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: params
              param: 
                type: string
                example: _id
              msg: 
                type: string
                example: required observation id
                
    MapEntitiesToObservationRequest:
      type: object
      properties:
        data: 
          type: array
          items: 
            type: string
            example: 5beaa888af0065f0e0a10515
            
            
    MapEntitiesToObservationResponse:
      type: object
      properties:
        message: 
          type: string
          example: Updated successfully.
        status: 
          type: integer
          example: 200
    
    MapEntitiesToObservation400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: params
              param: 
                type: string
                example: _id
              msg: 
                type: string
                example: required observation id
      
      
    UnMapEntitiesToObservationRequest:
      type: object
      properties:
        data: 
          type: array
          items: 
            type: string
            example: 5beaa888af0065f0e0a10515
            
            
    UnMapEntitiesToObservationResponse:
      type: object
      properties:
        message: 
          type: string
          example: Entity Removed successfully.
        status: 
          type: integer
          example: 200
    
    UnMapEntitiesToObservation400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: params
              param: 
                type: string
                example: _id
              msg: 
                type: string
                example: required observation id
                
    observationSubmissionsCreateResponse:
      type: object
      properties:
        result: 
          type: array
          items: 
            type: object
            properties: 
              _id: 
                type: string
                example: 5d1070326f6ed50bc34aec2c
              entities: 
                type: array
                items: 
                  type: object
                  properties: 
                    _id: 
                      type: string
                      example: 5cebbefe5943912f56cf8e16
                    submissionStatus: 
                      type: string
                      example: pending
                    name: 
                      type: string
                      example: asd
              status: 
                type: string
                example: published
              endDate: 
                type: string
                example: "2019-06-24T00:00:00.000Z"
              name: 
                type: string
                example: asdasd
              description: 
                type: string
                example: asdasdasd
              solutionId: 
                type: string
                example: 5c6bd309af0065f0e0d4223b
              
    observationSubmissions400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: params
              param: 
                type: string
                example: _id
              msg: 
                type: string
                example: required observation id
                
    observationSubmissionsMakeRequest:
      type: object
      properties:
        evidence: 
          type: object
          properties: 
            externalId: 
              type: string
              example: 
            answers: 
              type: object
              properties: 
                5be442149a14ba4b5038dce4: 
                  type: object
                  properties: 
                    qid: 
                      type: string
                      example: 
                    responseType: 
                      type: string
                      example: 
                    value: 
                      type: array
                      items: 
                        type: object
                        properties: 
                          5be442dd9a14ba4b5038dce5: 
                            type: object
                            properties: 
                              qid: 
                                type: string
                                example: 
                              value: 
                                type: string
                                example: 
                              remarks: 
                                type: string
                                example: 
                              payload: 
                                type: object
                                properties: 
                                  question: 
                                    type: array
                                    items: 
                                      type: string
                                      example: 
                                  labels: 
                                    type: array
                                    items: 
                                      type: string
                                      example: 
                                  responseType: 
                                    type: string
                                    example: 
                              criteriaId: 
                                type: string
                                example: 
                          5be52f5d9a14ba4b5038dd0c: 
                            type: object
                            properties: 
                              qid: 
                                type: string
                                example: 
                              value: 
                                type: array
                                items: 
                                  type: string
                                  example: String
                              remarks: 
                                type: string
                                example: ""
                              payload: 
                                type: object
                                properties: 
                                  question: 
                                    type: array
                                    items: 
                                      type: string
                                      example: 
                                  labels: 
                                    type: array
                                    items: 
                                      type: string
                                      example: String
                                  responseType: 
                                    type: string
                                    example: 
                              criteriaId: 
                                type: string
                                example: 
                    remarks: 
                      type: string
                      example: ""
                    payload: 
                      type: object
                      properties: 
                        question: 
                          type: array
                          items: 
                            type: string
                            example: String
                        labels: 
                          type: array
                          items: 
                            type: array
                            items: 
                              type: array
                              items: 
                                type: object
                                properties: 
                                  _id: 
                                    type: string
                                    example: 
                                  question: 
                                    type: array
                                    items: 
                                      type: string
                                      example: String
                                  options: 
                                    type: array
                                    items: 
                                      type: object
                                      properties: 
                                        value: 
                                          type: string
                                          example: 
                                        label: 
                                          type: string
                                          example: 
                                  questionGroup: 
                                    type: array
                                    items: 
                                      type: string
                                      example: 
                                  deleted: 
                                    type: boolean
                                    example: false
                                  tip: 
                                    type: string
                                    example: ""
                                  externalId: 
                                    type: string
                                    example: ""
                                  visibleIf: 
                                    type: string
                                    example: ""
                                  file: 
                                    type: string
                                    example: 
                                  responseType: 
                                    type: string
                                    example: 
                                  validation: 
                                    type: object
                                    properties: 
                                      required: 
                                        type: boolean
                                  showRemarks: 
                                    type: boolean
                                  isCompleted: 
                                    type: boolean
                                  remarks: 
                                    type: string
                                    example: 
                                  value: 
                                    type: string
                                    example: 
                                  canBeNotApplicable: 
                                    type: string
                                    example: Boolean
                                  usedForScoring: 
                                    type: string
                                    example: 
                                  modeOfCollection: 
                                    type: string
                                    example: 
                                  questionType: 
                                    type: string
                                    example: 
                                  accessibility: 
                                    type: string
                                    example: 
                                  updatedAt: 
                                    type: string
                                    example: Date
                                  createdAt: 
                                    type: string
                                    example: Date
                                  __v: 
                                    type: number
                                    example: 0
                                  payload: 
                                    type: object
                                    properties: 
                                      criteriaId: 
                                        type: string
                                        example: 
                        responseType: 
                          type: string
                          example: 
                    criteriaId: 
                      type: string
                      example: 
        startTime: 
          type: string
          example: "2019-06-24T00:00:00.000Z"
        endTime: 
          type: string
          example: "2019-06-24T00:00:00.000Z"
        gpsLocation: 
          type: string
          example: ""
        submittedBy: 
          type: string
          example: 
        isValid: 
          type: boolean
    
    observationSubmissionsMakeResponse:
      type: object
      properties:
        status: 
          type: string
          example: draft
        _id: 
          type: string
          example: 12234234234
        evidencesStatus: 
          type: string
          example: draft
      
    observationSubmissionsMake400Error:
      type: object
      properties:
        status: 
          type: number
          example: 400
        message: 
          type: string
          example: Cannot read property 'externalId' of undefined
      
      
    observationsSubmissionStatusResponse:
      type: object
      properties:
        status: 
          type: number
          example: 400
        message: 
          type: string
          example: Cannot read property 'externalId' of undefined
          
    observationsSubmissionStatus400Error:
      type: object
      properties:
        result: 
          type: object
          properties: 
            allowed: 
              type: boolean
              example: true
                    
    observationsSubmissionDeleteResponse:
      type: object
      properties:
        status: 
          type: integer
          example: 200
        message: 
          type: string
          example: Observation submission deleted successfully
          
    observationsSubmissionDelete400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: string
          example: No submission found.
          
    observationSubmissionTitleRequest:
      type: object
      properties:
        title: 
          type: string
          example: Observation Submission Title
      
    observationSubmissionTitleResponse:
      type: object
      properties:
        message: 
          type: string
          example: Observation submission updated successfully
        status: 
          type: integer
          example: 200
    
    observationSubmissionTitle400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: body
              param: 
                type: string
                example: title
              msg: 
                type: string
                example: Invalid value
                
                
    observationsSubmissionList400Error:
      type: object
      properties:
        status: 
          type: integer
          example: 400
        message: 
          type: array
          items: 
            type: object
            properties: 
              location: 
                type: string
                example: params
              param: 
                type: string
                example: _id
              msg: 
                type: string
                example: required observation id

      
    observationsSubmissionListResponse:
      type: object
      properties:
        message: 
          type: string
          example: Successfully fetched observation submissions
        status: 
          type: number
          example: 200
        result: 
          type: array
          items: 
            type: object
            properties: 
              _id: 
                type: string
                example: 5d8de379bccbfb51d4450d05
              entityId: 
                type: string
                example: 5bfe53ea1d0c350d61b78d0f
              entityExternalId: 
                type: string
                example: 1208138
              entityType: 
                type: string
                example: school
              status: 
                type: string
                example: started
              submissionNumber: 
                type: number
                example: 1
              updatedAt: 
                type: string
                example: "2019-09-27T10:24:57.182Z"
              createdAt: 
                type: string
                example: "2019-09-27T10:24:57.182Z"

      
      
  securitySchemes:
    bearer:
      type: apiKey
      name: Authorization
      in: header    
  